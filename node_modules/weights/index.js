class Weights {
    constructor(){
        this.$list = [];
        this.$wsum = 0;
    }

    /**
     * 添加一个对象，为其分配权重
     * @param {{}} obj
     * @param {number} weight
     */
    addItem(obj, weight) {

        if(!obj){
            console.warn('警告：参数 obj 必须是一个对象');
            return;
        }

        if(weight===null || weight===undefined){
            console.warn('警告：参数 weight 必须大于等于0');
        }

        weight = weight>=0 ? weight : 0;

        for (let i = 0; i < this.$list.length; i++) {
            if(this.$list[i].obj == obj){
                return;
            }
        }
        this.$list.push({obj:obj, weight:weight});
        this.$wsum += weight;
    }


    /**
     * 移除一个对象
     * @param {{}} obj
     */
    removeItem(obj) {
        for (let i = 0; i < this.$list.length; i++) {
            if(this.$list[i].obj == obj){
                this.$wsum -= this.$list[i].weight;
                this.$list.splice(i,1);
                return;
            }
        }
    }

    /**
     * 清除
     */
    clear() {
        this.$list.length = 0;
        this.$wsum = 0;
    }

    /**
     * 随机返回一个对象
     * @returns {{} | null}
     */
    random() {
        const r = Math.random() * this.$wsum;
        let wsum = 0;
        for (let i = 0; i < this.$list.length; i++) {
            wsum += this.$list[i].weight;
            if(wsum > r){
                return this.$list[i].obj;
            }
        }
        return null;
    }

    /**
     * 修改对象的权重
     * @param {{}} obj
     * @param {number} weight
     */
    change(obj, weight) {
        this.$wsum = 0;
        for (let i = 0; i < this.$list.length; i++) {
            if(this.$list[i].obj == obj){
                this.$list[i].weight = weight;
            }
            this.$wsum += this.$list[i].weight;
        }
    }

}

module.exports = Weights;